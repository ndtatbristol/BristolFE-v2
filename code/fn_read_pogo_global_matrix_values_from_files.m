function mats = fn_read_pogo_global_matrix_values_from_files(info_fname, K_fname, C_fname, M_fname)
%Reads CSV files generated by Pogo if output of global matrices is
%requested using "--outputAllStiffToMatrix" option
info = readmatrix(info_fname, "OutputType","string");

%Read the info file to get no of DoF per node
i = 0;
i = fn_find_next(info, 'ndof', i);
df_per_nd = round(double(info(i, 2)));

%Read in each of the matrix files. Size of K matrix is used to force size
%of others to be same. Probably not necessary - just some concern about C
%matrix not being fully populated for all DoF if there is no damping.
mats.K = fn_file_to_matrix(K_fname, 0);
total_df = size(mats.K, 1);
mats.C = fn_file_to_matrix(C_fname, total_df);
mats.M = fn_file_to_matrix(M_fname, total_df);
mats.gl_lookup = reshape(1:total_df, df_per_nd, [])';
end

function ii = fn_find_next(s, ss, i)
i = max(i,1);
ii = i + find(strcmp(s(i:end, 1), ss), 1) - 1;
end

function M = fn_file_to_matrix(fname, sz)
M_tmp=readmatrix(fname);
if sz == 0
    M = sparse(M_tmp(:,1), M_tmp(:,2), M_tmp(:,3));
else
    M = sparse(M_tmp(:,1), M_tmp(:,2), M_tmp(:,3), sz, sz);
end
end